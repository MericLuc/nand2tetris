// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in=Io,out=Iinc);

    // FIRST APPROACH
    Mux8Way16(a=Io,b=false,c=in,d=false,e=Iinc,f=false,g=in,h=false,sel[0]=reset,sel[1]=load,sel[2]=inc,out=Isel);
    Register(in=Isel,load=true,out=Io,out=out);


    // ALTERNATIVE APPROACH
    // We have to handle control signals 'priorities'
    //Mux16(a=Io,b=Iinc,sel=inc,out=Io1);
    //Mux16(a=Io1,b=in,sel=load,out=Io2);
    //Mux16(a=Io2,b=false,sel=reset,out=IregIn);
    //Register(in=IregIn,load=true,out=Io,out=out);
}
